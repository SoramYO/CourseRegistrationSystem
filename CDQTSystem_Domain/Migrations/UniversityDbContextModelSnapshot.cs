// <auto-generated />
using System;
using CDQTSystem_Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CDQTSystem_Domain.Migrations
{
    [DbContext(typeof(UniversityDbContext))]
    partial class UniversityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CDQTSystem_Domain.Entities.AdministrativeStaff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Administ__3214EC07110B788D");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("AdministrativeStaff", (string)null);
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.ClassSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClassroomID");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseID");

                    b.Property<bool?>("IsOnline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("ProfessorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProfessorID");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SemesterID");

                    b.HasKey("Id")
                        .HasName("PK__ClassSec__3214EC07445812CF");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("CourseId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("SemesterId");

                    b.ToTable("ClassSections");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.ClassSectionSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ClassSectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClassSectionID");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id")
                        .HasName("PK__ClassSec__3214EC0712BFD349");

                    b.HasIndex("ClassSectionId");

                    b.ToTable("ClassSectionSchedules");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Equipment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Classroo__3214EC07BF78B0DD");

                    b.ToTable("Classroom", (string)null);
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearningOutcomes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Courses__3214EC077A949D04");

                    b.HasIndex("DepartmentId");

                    b.HasIndex(new[] { "CourseCode" }, "UQ__Courses__FC00E000C9449B35")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.CourseEvaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ClassSectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClassSectionID");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StudentID");

                    b.HasKey("Id")
                        .HasName("PK__CourseEv__3214EC076F94292C");

                    b.HasIndex("ClassSectionId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseEvaluations");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.CourseRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ClassSectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClassSectionID");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("RegistrationPeriodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StudentID");

                    b.Property<string>("TuitionStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Pending");

                    b.HasKey("Id")
                        .HasName("PK__CourseRe__3214EC07FD84D7CD");

                    b.HasIndex("ClassSectionId");

                    b.HasIndex("RegistrationPeriodId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseRegistrations");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.CourseSyllabus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SyllabusContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Version")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__CourseSy__3214EC07A907D901");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseSyllabi");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Departme__3214EC07BCD57E06");

                    b.HasIndex(new[] { "DepartmentName" }, "UQ__Departme__D949CC34AFE0707A")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.FinancialAid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AidName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("ApplicationDeadline")
                        .HasColumnType("date");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Financia__3214EC07CD752F94");

                    b.HasIndex("DepartmentId");

                    b.ToTable("FinancialAids");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Grade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CourseRegistrationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseRegistrationID");

                    b.Property<string>("GradeValue")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<decimal>("QualityPoints")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Grades__3214EC07EB54789C");

                    b.HasIndex("CourseRegistrationId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Major", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RequiredCredits")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Majors__3214EC0706A736F8");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.MidtermEvaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CourseRegistrationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseRegistrationID");

                    b.Property<string>("Recommendation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__MidtermE__3214EC0733774C4A");

                    b.HasIndex("CourseRegistrationId");

                    b.ToTable("MidtermEvaluations");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Professo__3214EC07E1AB028E");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.RegistrationPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Registra__3214EC071C5822B6");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("SemesterId");

                    b.ToTable("RegistrationPeriods");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC07D0B34CBE");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B6160ED56A0DA")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Scholarship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("ApplicationDeadline")
                        .HasColumnType("date");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScholarshipName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Scholars__3214EC074C907D15");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Scholarships");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Semester__3214EC077B57D336");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.ServiceRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StudentID");

                    b.HasKey("Id")
                        .HasName("PK__ServiceR__3214EC079BC47696");

                    b.HasIndex("StudentId");

                    b.ToTable("ServiceRequests");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateOnly?>("AdmissionDate")
                        .HasColumnType("date");

                    b.Property<string>("AdmissionStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly>("EnrollmentDate")
                        .HasColumnType("date");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MajorID");

                    b.Property<string>("Mssv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MSSV");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Students__3214EC072A641ED3");

                    b.HasIndex("MajorId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.StudentFinancialAid", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StudentID");

                    b.Property<Guid>("FinancialAidId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FinancialAidID");

                    b.Property<DateOnly>("AwardDate")
                        .HasColumnType("date");

                    b.HasKey("StudentId", "FinancialAidId")
                        .HasName("PK__StudentF__2337769D9F585E8C");

                    b.HasIndex("FinancialAidId");

                    b.ToTable("StudentFinancialAids");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.StudentScholarship", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StudentID");

                    b.Property<Guid>("ScholarshipId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ScholarshipID");

                    b.Property<DateOnly>("AwardDate")
                        .HasColumnType("date");

                    b.HasKey("StudentId", "ScholarshipId")
                        .HasName("PK__StudentS__EA96C6580B50F8F2");

                    b.HasIndex("ScholarshipId");

                    b.ToTable("StudentScholarships");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.StudentTuition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("PaymentDueDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SemesterID");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StudentID");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("TuitionPolicyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TuitionPolicyID");

                    b.HasKey("Id")
                        .HasName("PK__StudentT__3214EC071197F40B");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TuitionPolicyId");

                    b.ToTable("StudentTuition", (string)null);
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Tuition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastPaymentDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Tuitions__3214EC070E564B1A");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.ToTable("Tuitions");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.TuitionPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__TuitionP__3214EC07DE141B5E");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("SemesterId");

                    b.ToTable("TuitionPeriods");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.TuitionPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("MajorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MajorID");

                    b.Property<string>("PolicyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__TuitionP__3214EC0745FBEDBD");

                    b.HasIndex("MajorId");

                    b.ToTable("TuitionPolicies");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07D9E1546D");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534583BA837")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CourseCorequisite", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseID");

                    b.Property<Guid>("CorequisiteCourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorequisiteCourseID");

                    b.HasKey("CourseId", "CorequisiteCourseId")
                        .HasName("PK__CourseCo__BE20E9E6D9E6BBA6");

                    b.HasIndex("CorequisiteCourseId");

                    b.ToTable("CourseCorequisites", (string)null);
                });

            modelBuilder.Entity("CoursePrerequisite", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseID");

                    b.Property<Guid>("PrerequisiteCourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PrerequisiteCourseID");

                    b.HasKey("CourseId", "PrerequisiteCourseId")
                        .HasName("PK__CoursePr__E09340CD9DABCBD5");

                    b.HasIndex("PrerequisiteCourseId");

                    b.ToTable("CoursePrerequisites", (string)null);
                });

            modelBuilder.Entity("MajorCourse", b =>
                {
                    b.Property<Guid>("MajorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MajorID");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseID");

                    b.HasKey("MajorId", "CourseId")
                        .HasName("PK__MajorCou__B92A68A96EB66004");

                    b.HasIndex("CourseId");

                    b.ToTable("MajorCourses", (string)null);
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.AdministrativeStaff", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Department", "Department")
                        .WithMany("AdministrativeStaffs")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Administr__Depar__534D60F1");

                    b.HasOne("CDQTSystem_Domain.Entities.User", "User")
                        .WithMany("AdministrativeStaffs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Administr__UserI__52593CB8");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.ClassSection", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Classroom", "Classroom")
                        .WithMany("ClassSections")
                        .HasForeignKey("ClassroomId")
                        .HasConstraintName("FK__ClassSect__Class__0D7A0286");

                    b.HasOne("CDQTSystem_Domain.Entities.Course", "Course")
                        .WithMany("ClassSections")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__ClassSect__Cours__0A9D95DB");

                    b.HasOne("CDQTSystem_Domain.Entities.Professor", "Professor")
                        .WithMany("ClassSections")
                        .HasForeignKey("ProfessorId")
                        .HasConstraintName("FK__ClassSect__Profe__0C85DE4D");

                    b.HasOne("CDQTSystem_Domain.Entities.Semester", "Semester")
                        .WithMany("ClassSections")
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("FK__ClassSect__Semes__0B91BA14");

                    b.Navigation("Classroom");

                    b.Navigation("Course");

                    b.Navigation("Professor");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.ClassSectionSchedule", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.ClassSection", "ClassSection")
                        .WithMany("ClassSectionSchedules")
                        .HasForeignKey("ClassSectionId")
                        .IsRequired()
                        .HasConstraintName("FK__ClassSect__Class__123EB7A3");

                    b.Navigation("ClassSection");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Course", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Courses__Departm__6EF57B66");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.CourseEvaluation", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.ClassSection", "ClassSection")
                        .WithMany("CourseEvaluations")
                        .HasForeignKey("ClassSectionId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseEva__Class__2739D489");

                    b.HasOne("CDQTSystem_Domain.Entities.Student", "Student")
                        .WithMany("CourseEvaluations")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseEva__Stude__282DF8C2");

                    b.Navigation("ClassSection");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.CourseRegistration", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.ClassSection", "ClassSection")
                        .WithMany("CourseRegistrations")
                        .HasForeignKey("ClassSectionId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseReg__Class__17036CC0");

                    b.HasOne("CDQTSystem_Domain.Entities.RegistrationPeriod", "RegistrationPeriod")
                        .WithMany("CourseRegistrations")
                        .HasForeignKey("RegistrationPeriodId")
                        .HasConstraintName("FK__CourseReg__Regis__4A8310C6");

                    b.HasOne("CDQTSystem_Domain.Entities.Student", "Student")
                        .WithMany("CourseRegistrations")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseReg__Stude__160F4887");

                    b.Navigation("ClassSection");

                    b.Navigation("RegistrationPeriod");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.CourseSyllabus", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Course", "Course")
                        .WithMany("CourseSyllabi")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseSyl__Cours__7B5B524B");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.FinancialAid", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Department", "Department")
                        .WithMany("FinancialAids")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__Financial__Depar__5EBF139D");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Grade", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.CourseRegistration", "CourseRegistration")
                        .WithMany("Grades")
                        .HasForeignKey("CourseRegistrationId")
                        .IsRequired()
                        .HasConstraintName("FK__Grades__CourseRe__1BC821DD");

                    b.Navigation("CourseRegistration");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Major", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Department", "Department")
                        .WithMany("Majors")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Majors__Departme__44FF419A");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.MidtermEvaluation", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.CourseRegistration", "CourseRegistration")
                        .WithMany("MidtermEvaluations")
                        .HasForeignKey("CourseRegistrationId")
                        .IsRequired()
                        .HasConstraintName("FK__MidtermEv__Cours__1F98B2C1");

                    b.Navigation("CourseRegistration");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Professor", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Department", "Department")
                        .WithMany("Professors")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Professor__Depar__4E88ABD4");

                    b.HasOne("CDQTSystem_Domain.Entities.User", "User")
                        .WithMany("Professors")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Professor__UserI__4D94879B");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.RegistrationPeriod", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.User", "CreatedByNavigation")
                        .WithMany("RegistrationPeriods")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__Registrat__Creat__3E1D39E1");

                    b.HasOne("CDQTSystem_Domain.Entities.Semester", "Semester")
                        .WithMany("RegistrationPeriods")
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("FK__Registrat__Semes__3D2915A8");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Scholarship", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Department", "Department")
                        .WithMany("Scholarships")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__Scholarsh__Depar__5AEE82B9");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.ServiceRequest", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Student", "Student")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__ServiceRe__Stude__236943A5");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Student", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Major", "Major")
                        .WithMany("Students")
                        .HasForeignKey("MajorId")
                        .IsRequired()
                        .HasConstraintName("FK__Students__MajorI__49C3F6B7");

                    b.HasOne("CDQTSystem_Domain.Entities.User", "User")
                        .WithMany("Students")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Students__UserID__48CFD27E");

                    b.Navigation("Major");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.StudentFinancialAid", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.FinancialAid", "FinancialAid")
                        .WithMany("StudentFinancialAids")
                        .HasForeignKey("FinancialAidId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentFi__Finan__66603565");

                    b.HasOne("CDQTSystem_Domain.Entities.Student", "Student")
                        .WithMany("StudentFinancialAids")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentFi__Stude__656C112C");

                    b.Navigation("FinancialAid");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.StudentScholarship", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Scholarship", "Scholarship")
                        .WithMany("StudentScholarships")
                        .HasForeignKey("ScholarshipId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentSc__Schol__628FA481");

                    b.HasOne("CDQTSystem_Domain.Entities.Student", "Student")
                        .WithMany("StudentScholarships")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentSc__Stude__619B8048");

                    b.Navigation("Scholarship");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.StudentTuition", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Semester", "Semester")
                        .WithMany("StudentTuitions")
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentTu__Semes__04E4BC85");

                    b.HasOne("CDQTSystem_Domain.Entities.Student", "Student")
                        .WithMany("StudentTuitions")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentTu__Stude__03F0984C");

                    b.HasOne("CDQTSystem_Domain.Entities.TuitionPolicy", "TuitionPolicy")
                        .WithMany("StudentTuitions")
                        .HasForeignKey("TuitionPolicyId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentTu__Tuiti__05D8E0BE");

                    b.Navigation("Semester");

                    b.Navigation("Student");

                    b.Navigation("TuitionPolicy");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Tuition", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Semester", "Semester")
                        .WithMany("Tuitions")
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("FK__Tuitions__Semest__489AC854");

                    b.HasOne("CDQTSystem_Domain.Entities.Student", "Student")
                        .WithMany("Tuitions")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__Tuitions__Studen__47A6A41B");

                    b.Navigation("Semester");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.TuitionPeriod", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.User", "CreatedByNavigation")
                        .WithMany("TuitionPeriods")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__TuitionPe__Creat__42E1EEFE");

                    b.HasOne("CDQTSystem_Domain.Entities.Semester", "Semester")
                        .WithMany("TuitionPeriods")
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("FK__TuitionPe__Semes__41EDCAC5");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.TuitionPolicy", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Major", "Major")
                        .WithMany("TuitionPolicies")
                        .HasForeignKey("MajorId")
                        .HasConstraintName("FK__TuitionPo__Major__571DF1D5");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.User", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__RoleId__412EB0B6");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CourseCorequisite", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CorequisiteCourseId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseCor__Coreq__76969D2E");

                    b.HasOne("CDQTSystem_Domain.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseCor__Cours__75A278F5");
                });

            modelBuilder.Entity("CoursePrerequisite", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__CoursePre__Cours__71D1E811");

                    b.HasOne("CDQTSystem_Domain.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("PrerequisiteCourseId")
                        .IsRequired()
                        .HasConstraintName("FK__CoursePre__Prere__72C60C4A");
                });

            modelBuilder.Entity("MajorCourse", b =>
                {
                    b.HasOne("CDQTSystem_Domain.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__MajorCour__Cours__2BFE89A6");

                    b.HasOne("CDQTSystem_Domain.Entities.Major", null)
                        .WithMany()
                        .HasForeignKey("MajorId")
                        .IsRequired()
                        .HasConstraintName("FK__MajorCour__Major__2B0A656D");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.ClassSection", b =>
                {
                    b.Navigation("ClassSectionSchedules");

                    b.Navigation("CourseEvaluations");

                    b.Navigation("CourseRegistrations");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Classroom", b =>
                {
                    b.Navigation("ClassSections");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Course", b =>
                {
                    b.Navigation("ClassSections");

                    b.Navigation("CourseSyllabi");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.CourseRegistration", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("MidtermEvaluations");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Department", b =>
                {
                    b.Navigation("AdministrativeStaffs");

                    b.Navigation("Courses");

                    b.Navigation("FinancialAids");

                    b.Navigation("Majors");

                    b.Navigation("Professors");

                    b.Navigation("Scholarships");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.FinancialAid", b =>
                {
                    b.Navigation("StudentFinancialAids");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Major", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("TuitionPolicies");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Professor", b =>
                {
                    b.Navigation("ClassSections");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.RegistrationPeriod", b =>
                {
                    b.Navigation("CourseRegistrations");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Scholarship", b =>
                {
                    b.Navigation("StudentScholarships");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Semester", b =>
                {
                    b.Navigation("ClassSections");

                    b.Navigation("RegistrationPeriods");

                    b.Navigation("StudentTuitions");

                    b.Navigation("TuitionPeriods");

                    b.Navigation("Tuitions");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.Student", b =>
                {
                    b.Navigation("CourseEvaluations");

                    b.Navigation("CourseRegistrations");

                    b.Navigation("ServiceRequests");

                    b.Navigation("StudentFinancialAids");

                    b.Navigation("StudentScholarships");

                    b.Navigation("StudentTuitions");

                    b.Navigation("Tuitions");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.TuitionPolicy", b =>
                {
                    b.Navigation("StudentTuitions");
                });

            modelBuilder.Entity("CDQTSystem_Domain.Entities.User", b =>
                {
                    b.Navigation("AdministrativeStaffs");

                    b.Navigation("Professors");

                    b.Navigation("RegistrationPeriods");

                    b.Navigation("Students");

                    b.Navigation("TuitionPeriods");
                });
#pragma warning restore 612, 618
        }
    }
}
